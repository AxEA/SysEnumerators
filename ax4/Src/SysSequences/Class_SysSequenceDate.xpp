//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysSequenceDate extends SysSequence implements ISysSequence
{
    SysRangeDate range;
    int step;

    public SysSequenceDate clone()
    {
        SysSequenceDate sequence = SysSequenceDate::construct(this.range().start(), this.range().end(), this.step());

        return sequence;
    }

    protected SysRangeDate defaultRange()
    {
        return SysRangeDate::construct();
    }

    public Date end()
    {
        return this.range().end();
    }

    public boolean equal(SysSequenceDate sequence)
    {
        boolean ret = sequence
                      && (this.range().equal(sequence.range()))
                      && (this.step() == sequence.step());
        return ret;
    }

    public SysIterations estimatedIterations()
    {
        SysIterations ret = SysEnumerator::IterationsMax();
        int distance = this.range().distance();

        if( distance == 0 )
        {
            ret = 1;
        }
        else if( ((distance < 0) && (this.step() > 0))
              || ((distance > 0) && (this.step() < 0)) )
        {
            ret = 0;
        }
        else if( step == 1 )
        {
            ret = distance + 1;
        }
        else
        {
            ret = distance div this.step() + 1;
        }

        return ret;
    }

    public SysEnumerator getEnumerator()
    {
        return SysEnumerator::sequence(this);
    }

    public Date getNext(Date value)
    {
        return value + this.step();
    }

    public void new(SysRangeDate _range, int _step = 1)
    {;
        Debug::assert(_step != 0);

        if( !_range )
        {
            _range = this.defaultRange();
        }

        range = _range;
        step = _step;
    }

    public SysSequenceDate normalize()
    {
        SysSequenceDate sequence;

        if( this.range().reversed() )
        {
            sequence = this.reverse();
        }
        else
        {
            sequence = this.clone();
        }

        return sequence;
    }

    public SysRangeDate range()
    {
        return range;
    }

    public SysSequenceDate reverse()
    {
        SysSequenceDate sequence = SysSequenceDate::construct(this.range().end(), this.range().start(), this.reverseStep());

        return sequence;
    }

    public int reverseStep()
    {
        return 0-step;
    }

    public Date start()
    {
        return this.range().start();
    }

    public int step()
    {
        return step;
    }

    public str toString()
    {
        return strfmt('%1:%2', this.step(), this.range().toString());
    }

    public static SysSequenceDate construct(date start = DateNull(), date end = DateMax(), int step = 1)
    {
        SysRangeDate range = SysRangeDate::construct(start, end);
        SysSequenceDate sequence = new SysSequenceDate(range, step);

        return sequence;
    }

    public static SysSequenceDate newFromRange(SysRangeDate range, int step = 1)
    {
        SysSequenceDate sequence = new SysSequenceDate(range, step);

        return sequence;
    }
}