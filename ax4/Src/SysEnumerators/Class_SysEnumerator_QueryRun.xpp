//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysEnumerator_QueryRun extends SysEnumerator_Indexed64
{
    QueryRun base;

    SysIterations estimatedIterations;

    public QueryRun base()
    {
        return base;
    }

    protected boolean begin()
    {
        boolean ret = super() && this.next();

        return ret;
    }

    public Common current(tableId tableId = 0, int occurrence = 1)
    {
        Common ret;

        if( this.base() )
        {
            if( tableId )
            {
                ret = this.base().get(tableId, occurrence);
            }
            else
            {
                ret = this.base().getNo(1);
            }
        }

        return ret;
    }

    public Common currentKey(tableId tableId = 0, int occurrence = 1)
    {
        return this.current(tableId, occurrence);
    }

    public Common currentValue(tableId tableId = 0, int occurrence = 1)
    {
        return this.current(tableId, occurrence);
    }

    protected boolean currentValueProvided()
    {
        return true;
    }

    public SysIterations estimatedIterations(SysIterations _estimatedIterations = -1)
    {
        if( estimatedIterations < 0
         && this.base()
         && this.base().query()
         && this.base().query().dataSourceCount() )
        {
            estimatedIterations = SysQuery::countLoops(this.base());
        }
        else
        {
            return max(0, estimatedIterations);
        }

        return estimatedIterations;
    }

    public void new(QueryRun _base = null, SysIterations _estimatedIterations = -1)
    {
        base = _base;
        estimatedIterations = _estimatedIterations;
        super();
    }

    protected boolean next()
    {
        boolean ret = super() && this.base() && this.base().next();

        return ret;
    }

    public void reset()
    {
        if( this.base() )
        {
            this.base().reset();
        }
        super();
    }

    public static SysEnumerator_QueryRun construct(QueryRun base = null, SysIterations estimatedIterations = -1)
    {
        SysEnumerator_QueryRun enumerator = new SysEnumerator_QueryRun(base, estimatedIterations);

        return enumerator;
    }
}