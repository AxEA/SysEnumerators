//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysEnumerator_RecordTest extends SysTestCase
{

    void testRecord()
    {
        // see also combined Record + value2set
    
        SysUserInfo sysUserInfo = SysUserInfo::find();
        SysEnumerator_Record se = SysEnumerator_Record::construct(sysUserInfo);
    
        this.assertNotNull(se);
        this.assertEquals(int64Max(), se.estimatedIterations());
        this.assertEquals(SysEnumeratorPosition::BeforeFirstElement, se.position());
    
        while(se.moveNext())
        {
            this.assertEquals(SysEnumeratorPosition::Inside, se.position());
        }
    
        this.assertEquals(SysEnumeratorPosition::Outside, se.position());
        this.assertEquals(int64Max(), se.estimatedIterations());
    }

    void testRecordEmpty()
    {
        // see also combined Record + value2set
    
        SysUserInfo sysUserInfo = SysUserInfo::find(); // first only, current user
        SysEnumerator_Record se = SysEnumerator_Record::construct(sysUserInfo);
    
        this.assertNotNull(se);
        this.assertEquals(SysEnumeratorPosition::BeforeFirstElement, se.position());
    
        this.assertTrue(se.moveNext());
        this.assertEquals(SysEnumeratorPosition::Inside, se.position());
    
        this.assertFalse(se.moveNext());
        this.assertEquals(SysEnumeratorPosition::Outside, se.position());
    }

    void testRecordReset()
    {
        SysUserInfo sysUserInfo = SysUserInfo::find();
        SysEnumerator_Record se = SysEnumerator_Record::construct(sysUserInfo);
    
        this.assertNotNull(se);
        this.assertEquals(SysEnumeratorPosition::BeforeFirstElement, se.position());
    
        this.parmExceptionExpected(true);
    
        se.reset();
    }
}