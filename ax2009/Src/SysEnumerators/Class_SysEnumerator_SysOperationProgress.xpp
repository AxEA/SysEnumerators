//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysEnumerator_SysOperationProgress extends SysEnumerator_Int64
{
	#AviFiles

	SysOperationProgress base;

    public SysOperationProgress base()
    {
        return base;
    }

    protected boolean begin()
    {
        boolean ret = super();
    
        if( ret )
        {
            this.base().reset();
        }
    
        return ret;
    }

    public SysOperationProgress defaultProgress()
    {
        SysOperationProgress progress = SysOperationProgress::newGeneral(#AviStopwatch, '', 0);
    
        return progress;
    }

    public int64 estimatedIterations(int64 estimatedIterations = -1)
    {
        int64 ret;
    
        if( estimatedIterations >= 0 )
        {
            this.base().setTotal(estimatedIterations);
        }
    
        ret = this.base().getTotal();
    
        if( ret == 0 )
        {
            ret = super();
        }
    
        return ret;
    }

    public void new(SysOperationProgressBase _base = null)
    {
        if( _base == null )
        {
            _base = this.defaultProgress();
        }
    
        base = _base;
    
        if( base.getTotal() )
        {
            super(SysSequenceInt64::construct(_base.getCount_RU(), base.getTotal()));
        }
        else
        {
            super();
        }
    }

    protected boolean next()
    {
        boolean ret = super();
    
        if( ret )
        {
            this.base().incCount();
        }
    
        return ret;
    }

    public static SysEnumerator_SysOperationProgress construct(SysOperationProgress base = null)
    {
        SysEnumerator_SysOperationProgress enumerator = new SysEnumerator_SysOperationProgress(base);
    
        return enumerator;
    }

    public static SysEnumerator_SysOperationProgress newGeneral(
        Filename    animation = #AviStopwatch,
        Caption     caption = '',
        int64       total = 0)
    {
        SysEnumerator_SysOperationProgress enumerator = SysEnumerator_SysOperationProgress::construct();
        SysOperationProgress progress = enumerator.base();
    ;
        progress.setAnimation(animation);
        progress.setCaption(caption);
        progress.setTotal(total);
    
        return enumerator;
    }
}